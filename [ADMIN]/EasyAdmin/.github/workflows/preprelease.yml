# This is a basic workflow that is manually triggered

name: Prepare Release

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Version Number'
        # Input has to be provided for the workflow to run
        required: true
      

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  create:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - uses: actions/checkout@master
    - name: Configure version.json & Push Tag
      run: | 
            echo "version is ${{ github.event.inputs.version }}"
            git config user.name "GitHub Actions Bot"
            git config user.email "<>"
            echo '{"version": "${{ github.event.inputs.version }}", "changelog": "Version ${{ github.event.inputs.version }}", "fivem": {"version": "${{ github.event.inputs.version }}","changelog": "Version ${{ github.event.inputs.version }}"},"redm": {"version": "${{ github.event.inputs.version }}","changelog": "Version ${{ github.event.inputs.version }}"}}' > version.json
            git add .
            git commit -m "${{ github.event.inputs.version }}"
            git tag -a ${{ github.event.inputs.version }} -m "Version ${{ github.event.inputs.version }}"
            echo '{"master":true, "version": "${{ github.event.inputs.version }}", "changelog": "Version ${{ github.event.inputs.version }}", "fivem": {"version": "${{ github.event.inputs.version }}","changelog": "Version ${{ github.event.inputs.version }}"},"redm": {"version": "${{ github.event.inputs.version }}","changelog": "Version ${{ github.event.inputs.version }}"}}' > version.json
            git add .
            git commit -m "Update Version"
            git push --follow-tags
